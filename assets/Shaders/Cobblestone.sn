$name Cobblestone Texture

@input vec2 vector 0.0,0.0
@input constant float scale 5.0
@input constant float seed 1.5

@static musgrave

@output float factor

#import ShaderLib/random.glsllib

<static>

float musgrave(vec2 uv, float scale, float seed) {
    
    uv *= scale;
    
    // divide the space into a grid, with i being the cell index,
    // and f being the location relative to the cell (or cell space)
    vec2 i = floor(uv);
    vec2 f = fract(uv);
    
    float minDist1 = 100.0;
    float minDist2 = 100.0;
    
    // iterate through this cell and the 8 surrounding cells
    for (int y = -1; y <= 1; y++) {
        for (int x = -1; x <= 1; x++) {
            // neighbor place in the grid
            vec2 neighbor = vec2(float(x), float(y));
            vec2 point = randomVec2(i + neighbor, seed);
            vec2 diff = neighbor + point - f;
            float dist = length(diff);
            if (dist < minDist1) {
                minDist2 = minDist1;
                minDist1 = dist;
            }
            else if (dist < minDist2) {
                minDist2 = dist;
            }
        }
    }
    
    return (1.0 - minDist1) + (1.0 - minDist2);
    
}

</static>
<main>

float factor = musgrave(vector, scale, seed);

</main>
